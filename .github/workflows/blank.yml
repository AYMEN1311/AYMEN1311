from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
from PIL import Image, ImageDraw

class Tuile:
    def __init__(self, x, y, est_cassee=False):
        self.x = x
        self.y = y
        self.est_cassee = est_cassee

    def afficher(self):
        print(f"Tuile à ({self.x}, {self.y}), Cassée : {self.est_cassee}")

    def dessiner(self, image):
        draw = ImageDraw.Draw(image)
        if self.est_cassee:
            draw.line((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), fill="red", width=3)
            draw.line((self.x * 50, (self.y + 1) * 50, (self.x + 1) * 50, self.y * 50), fill="red", width=3)
        else:
            draw.rectangle((self.x * 50, self.y * 50, (self.x + 1) * 50, (self.y + 1) * 50), outline="black")

# Exemple d'utilisation
image = Image.new("RGB", (200, 200), "white")
tuile1 = Tuile(1, 1, False)  # Tuile magique sans fissure
tuile1.dessiner(image)

image.show()
